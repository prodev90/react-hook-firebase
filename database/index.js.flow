// @flow
import type { FirebaseError } from 'firebase';
import type { DataSnapshot, Query } from 'firebase/database';

export type ListHook = {
  error?: FirebaseError,
  loading: boolean,
  value: DataSnapshot[],
};
export type ListKeysHook = {
  error?: FirebaseError,
  loading: boolean,
  value: string[],
};
export type ListValsHook<T> = {
  error?: FirebaseError,
  loading: boolean,
  value: T[],
};
export type ObjectHook = {
  error?: FirebaseError,
  loading: boolean,
  value?: DataSnapshot,
};
export type ObjectValHook<T> = {
  error?: FirebaseError,
  loading: boolean,
  value?: T,
};

declare export function useList(query?: Query | null): ListHook;
declare export function useListKeys(query?: Query | null): ListKeysHook;
declare export function useListVals<T>(
  query?: Query | null,
  keyField?: string
): ListValsHook<T>;
declare export function useObject(query?: Query | null): ObjectHook;
declare export function useObjectVal<T>(query?: Query | null): ObjectValHook<T>;
